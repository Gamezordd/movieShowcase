{"version":3,"sources":["Components/LoadingComponent.js","Components/GhostLoad.js","Components/MovieDetailComponent.js","Components/MainComponent.js","Components/redux/ActionCreators.js","Components/redux/ActionTypes.js","Components/shared/baseUrl.js","Components/redux/thumbs.js","Components/HeaderComponent.js","App.js","Components/redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","style","display","justifyContent","alignItems","height","className","Ghost","console","log","isBrowser","Card","Component","MovieDetail","props","state","isModalOpen","state2","toggleModal","bind","element","this","setState","content","map","adult","toShowDescription","description","length","substring","toShowTitle","title","key","id","src","artwork","loader","onClick","href","CardFooter","Row","class","rating","cert","Modal","isOpen","toggle","ModalHeader","ModalBody","Col","md","Certif","CreateRating","Main","page","currentPage","firstcall","window","onscroll","debounce","innerHeight","scrollY","document","body","offsetHeight","addContent","thumbs","fetchMovies","isLoading","errMess","updateContent","connect","dispatch","type","fetch","URLs","then","response","ok","error","Error","status","statusText","message","json","movies","results","payload","addThumb","movie","poster_path","overview","vote_average","catch","Thumbs","action","Header","Navbar","dark","store","createStore","combineReducers","applyMiddleware","thunk","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27d1b228.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: 450\r\n          }}>\r\n              <div className=\"row\">\r\n              <i className=\"fa fa-circle-o-notch fa-pulse fa-4x fa-lg text-primary\"></i>\r\n              </div>\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport {Card} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport {isBrowser} from 'react-device-detect';\r\n\r\nexport default class Ghost extends Component {\r\n    render(){\r\n        console.log(\"Loading\");\r\n        if (isBrowser){\r\n            return(\r\n                <div className=\"row mx-2 my-5 justify-content-center\">\r\n                    <div className=\"col-md-3 my-2\">\r\n                    <Card><Loading /></Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 my-2\">\r\n                    <Card><Loading /></Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 my-2\">\r\n                    <Card><Loading /></Card>\r\n                    </div>\r\n                    <div className=\"col-md-3 my-2\">\r\n                    <Card><Loading /></Card>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n            <div className=\"row mx-2 my-5 justify-content-center\">\r\n                    <div className=\"col-md-3 my-2\">\r\n                    <Card><Loading /></Card>\r\n                    </div>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n}","import React, {Component} from 'react';\r\nimport {Card, Modal, ModalHeader, ModalBody, Row, Col, CardFooter} from 'reactstrap';\r\nimport Img from 'react-image';\r\nimport {Loading} from './LoadingComponent'\r\nimport Ghost from './GhostLoad';\r\nimport {isMobile,isBrowser} from 'react-device-detect';\r\n\r\nexport default class MovieDetail extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isModalOpen:false,\r\n\r\n            }\r\n        this.state2={}\r\n\r\n            this.toggleModal=this.toggleModal.bind(this);\r\n    }\r\n  \r\n    toggleModal(element){\r\n        console.log(\"element:\", element);\r\n        this.state2=element;\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n        console.log(\"imagestate: \", this.state2); \r\n    }\r\n\r\n    render(){\r\n        console.log(\"content:\", this.props.content);\r\n        if(isBrowser){\r\n            return(\r\n                <div>\r\n                    <div className=\"row mx-2 my-5 justify-content-center\">\r\n                        {this.props.content.map((element) =>{\r\n\r\n                                console.log(\"adult \" ,element.adult);\r\n                            var toShowDescription = element.description;\r\n                            if(element.description.length>200){\r\n                                toShowDescription = element.description.substring(0,200)+\"...\";\r\n                            }\r\n                            \r\n                            var toShowTitle = element.title;\r\n                            if(element.title.length>35){\r\n                                toShowTitle = element.title.substring(0,35)+\"...\";\r\n                            }\r\n                            return(\r\n                                    <div className=\"col-md-3 my-auto\">\r\n                                        <Card key={element.id} className=\"my-2\">\r\n                                        <div className=\"container1\"> \r\n                                            <div className=\"content\">\r\n                                                <div className=\"content-overlay\"></div>\r\n                                                <Img className=\"col-12 m-0 p-0 content-image\" \r\n                                                    src={element.artwork} \r\n                                                    loader={<Loading/>}\r\n                                                />\r\n                                                <div className=\"content-details fadeIn-left\" onClick={() => this.toggleModal(element)}>\r\n                                                <h3 className=\"content-title\">{toShowTitle}</h3>\r\n                                                <p className=\"content-text\"> {toShowDescription}</p>\r\n                                                \r\n                                                <span className=\"fa fa-heart-o button-like\" href=\"\"/>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <CardFooter>\r\n                                            <Row className=\"align-self-center\">\r\n                                                <span class=\"fa fa-imdb fa-2x\"></span>  \r\n                                                <CreateRating rating={element.rating}/> \r\n                                                <Certif cert={element.adult}/>\r\n                                            </Row>\r\n                                        </CardFooter>\r\n                                        </Card> \r\n                                    </div>\r\n                            );\r\n                        })}\r\n                        <Modal isOpen={this.state.isModalOpen} \r\n                            toggle={() => this.toggleModal(this.state2)} \r\n                            className=\"modal-lg\">\r\n                            <ModalHeader onClick={() => this.toggleModal(this.state2)}> \r\n                            <span className=\"fa fa-chevron-left fa-lg\"/>  <i> About Movie</i>\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                    <Img className=\"col-12 m-0 p-0 content-image\" \r\n                                        src={this.state2.artwork} \r\n                                        loader={<Loading/>}\r\n                                    />\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <h4 className=\"modal-text mt-2\">{this.state2.title}</h4><hr/>\r\n                                        <p className=\"modal-text\">{this.state2.description}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ModalBody>\r\n                        </Modal>\r\n                    </div>\r\n                    <Ghost/>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n                <div>\r\n                    <div className=\"row mx-2 my-5 justify-content-center\">\r\n                        {this.props.content.map((element) =>{\r\n\r\n                                console.log(\"adult \" ,element.adult);\r\n                            var toShowDescription = element.description;\r\n                            if(element.description.length>200){\r\n                                toShowDescription = element.description.substring(0,200)+\"...\";\r\n                            }\r\n                            \r\n                            var toShowTitle = element.title;\r\n                            if(element.title.length>35){\r\n                                toShowTitle = element.title.substring(0,35)+\"...\";\r\n                            }\r\n                            return(\r\n                                    <div className=\"col-md-3 my-auto\">\r\n                                        <Card key={element.id} className=\"my-2\" onClick={() => this.toggleModal(element)}>\r\n                                        <div className=\"container1\"> \r\n                                            <div className=\"content\">\r\n\r\n                                                <Img className=\"col-12 m-0 p-0 content-image\" \r\n                                                    src={element.artwork} \r\n                                                    loader={<Loading/>}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <CardFooter>\r\n                                            <Row className=\"align-self-center\">\r\n                                                <span class=\"fa fa-imdb fa-2x\"></span>  \r\n                                                <CreateRating rating={element.rating}/> \r\n                                                <Certif cert={element.adult}/>\r\n                                            </Row>\r\n                                        </CardFooter>\r\n                                        </Card> \r\n                                    </div>\r\n                            );\r\n                        })}\r\n                        <Modal isOpen={this.state.isModalOpen} \r\n                            toggle={() => this.toggleModal(this.state2)} \r\n                            className=\"modal-lg\">\r\n                            <ModalHeader onClick={() => this.toggleModal(this.state2)}> \r\n                            <span className=\"fa fa-chevron-left fa-lg\"/>  <i> About Movie</i>\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <Row>\r\n                                    <Col md=\"6\">\r\n                                    <Img className=\"col-12 m-0 p-0 content-image\" \r\n                                        src={this.state2.artwork} \r\n                                        loader={<Loading/>}\r\n                                    />\r\n                                    </Col>\r\n                                    <Col md=\"6\">\r\n                                        <h4 className=\"modal-text mt-2\">{this.state2.title}</h4><hr/>\r\n                                        <p className=\"modal-text\">{this.state2.description}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ModalBody>\r\n                        </Modal>\r\n                    </div>\r\n                    <Ghost/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nclass Certif extends Component{\r\n    render(){\r\n        if(this.props.cert){\r\n        return(\r\n            <h3 className=\"mature my-auto\">R</h3>\r\n        )\r\n        }\r\n        else{\r\n            return(\r\n                <div className=\"mature my-auto\">\r\n                    <span className=\"fa fa-ticket\"></span>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nclass CreateRating extends Component{\r\n    render(){\r\n        if ((this.props.rating/2)<=1){\r\n            return(\r\n                <div className=\"my-auto ml-2\">\r\n                <span className=\"fa fa-star\"></span>\r\n                </div>\r\n            )\r\n        }\r\n        else if((this.props.rating/2)<=2){\r\n            return(\r\n            <div className=\"my-auto ml-2\">\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            </div>\r\n            )\r\n        }\r\n        else if((this.props.rating/2)<=3){\r\n            return(\r\n            <div className=\"my-auto ml-2\">\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            </div>\r\n            )\r\n        }\r\n        else if((this.props.rating/2)<=4){\r\n            return(\r\n            <div className=\"my-auto ml-2\">\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            </div>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n            <div className=\"my-auto ml-2\">\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            <span className=\"fa fa-star\"></span>\r\n            </div>\r\n            )\r\n    }\r\n}\r\n}","import React, {Component} from 'react';\r\nimport debounce from \"lodash.debounce\";\r\nimport {connect} from 'react-redux';\r\nimport {fetchMovies} from './redux/ActionCreators'\r\nimport Ghost from './GhostLoad';\r\nimport MovieDetail from './MovieDetailComponent';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchMovies: (page) => dispatch(fetchMovies(page))\r\n});\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n      thumbs: state.thumbs\r\n    }\r\n  }\r\n\r\n\r\nclass Main extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            content:[],\r\n            page:1,\r\n            currentPage:0,\r\n            firstcall: false\r\n        };\r\n\r\n        window.onscroll = debounce(() => {\r\n            if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 2000){\r\n                this.addContent(this.props.thumbs.thumbs);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            firstcall: true\r\n        });\r\n        this.props.fetchMovies(this.state.page)                \r\n    }\r\n\r\n    render(){\r\n        if(this.props.thumbs.isLoading && this.state.firstcall){\r\n            return(\r\n                <div>\r\n                    <Ghost />\r\n                </div>\r\n            );\r\n        }\r\n        else if(this.props.thumbs.errMess) {\r\n            return(\r\n                <div>\r\n                    <h4>{this.props.thumbs.errMess}</h4>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if(this.state.firstcall){\r\n                this.addContent(this.props.thumbs.thumbs)\r\n                this.setState({\r\n                    firstcall: false\r\n                });\r\n            }\r\n            \r\n            return(\r\n                <MovieDetail content={this.state.content}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    addContent(updateContent){\r\n        this.setState({\r\n            content:[...this.state.content, ...updateContent],\r\n            page: this.state.page + 1,\r\n        });\r\n        this.props.fetchMovies(this.state.page);    \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\nimport * as URLs from '../shared/baseUrl';\r\n\r\nexport const addThumb = (movies) => ({\r\n    type: ActionTypes.ADD_THUMB,\r\n    payload: movies\r\n});\r\n\r\nexport const createArr = (movies) => (dispatch) => {\r\n    const moviesArr = movies.map(movie => ({\r\n        artwork: URLs.imageBaseUrl + movie.poster_path,\r\n        title: movie.title,\r\n        description: movie.overview,\r\n        adult:movie.adult,\r\n        rating:movie.vote_average\r\n    }))\r\n    \r\n    return(dispatch(addThumb(moviesArr)))\r\n}\r\n\r\nexport const thumbLoading = () => ({\r\n    type: ActionTypes.THUMB_LOADING\r\n});\r\n\r\nexport const thumbFailed = (errmess) =>({\r\n    type:ActionTypes.THUMB_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const fetchMovies = (page) => (dispatch) => {\r\n    dispatch(thumbLoading(true));\r\n    return fetch(URLs.listBaseUrlpre + URLs.api_key + URLs.listBaseUrlpost + page)\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            }\r\n            else{\r\n                var error = new Error('Error ' + response.status + \":\" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            console.log(\"error thrown\");\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(thumbs => dispatch(createArr(thumbs.results)))\r\n        .catch(error => dispatch(thumbFailed(error.message)))\r\n}","export const THUMB_LOADING = \"THUMB_LOADING\";\r\nexport const ADD_THUMB = \"ADD_THUMB\";\r\nexport const THUMB_FAILED = \"THUMB_FAILED\";","export const imageBaseUrl = \"https://image.tmdb.org/t/p/w500\";\r\nexport const listBaseUrlpre =\"https://api.themoviedb.org/3/discover/movie?api_key=\"\r\nexport const api_key = '32caee476494fffec113dfe33b606869'\r\nexport const listBaseUrlpost = \"&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=\"\r\n///DO NOT FORGET TO ADD PAGE NUMBER///\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Thumbs = (state = {\r\n    isLoading:true,\r\n    errMess:null,\r\n    thumbs: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_THUMB:\r\n            return{...state, isLoading: false, errMess: null, thumbs: action.payload};\r\n        \r\n        case ActionTypes.THUMB_LOADING:          \r\n            return{...state, isLoading: true, errMess: null, thumbs: []};\r\n        \r\n        case ActionTypes.THUMB_FAILED:\r\n            return{...state, isLoading: false, errMess: action.payload};\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {Component,Fragment} from 'react';\r\nimport{Navbar} from 'reactstrap'\r\n\r\nexport default class Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Fragment>\r\n                <Navbar dark className=\"sticky-top navbar-cust\">\r\n                    <div className=\"container\">\r\n                        <h4 className=\"navbar-text\">Movie Showcase</h4>\r\n                    </div>\r\n                </Navbar>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\nimport './App.css';\nimport Main from './Components/MainComponent'\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './Components/redux/configureStore';\nimport Header from './Components/HeaderComponent'\n\nconst store = ConfigureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n        <Header/>\n        <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {Thumbs} from './thumbs';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            thumbs: Thumbs\r\n        }),\r\n\r\n        applyMiddleware(thunk)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}